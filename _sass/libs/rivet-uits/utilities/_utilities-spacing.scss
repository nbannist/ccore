// rivet-uits - @version 1.3.0

// Copyright (C) 2018 The Trustees of Indiana University
// SPDX-License-Identifier: BSD-3-Clause

/* stylelint-disable */

// Spacing direction values
// NOTE: using "-bottom" will break the original version of the bottom utility classes
// That used "-btm" for class names. The documentation needs to be updated to reflect
// This change.
$spacing-directions: (
  null,
  -top,
  -right,
  -bottom,
  -left
);

// Spacing size values
// NOTE you can reference these sizes in core/_variables.scss

$spacing-sizes: (
  -xxs: $xxs,
  -xs: $xs,
  -sm: $sm,
  -md: $md,
  -lg: $lg,
  -xl: $xl,
  -xxl: $xxl
);

// Super gnarly loop here, but it save sooo much time

// Based on this great example by Harry Roberts:
// https://github.com/NHSLeadership/nightingale/blob/develop/utilities/_utilities.spacing.scss#L48

@each $direction in $spacing-directions {
  @each $size, $value in $spacing-sizes {
    // NOTE: We use !important here because we want these utilities to always
    // produced the same result.
    
    // DEPRECATED: In the next major version of Rivet we will be removing
    // any non-prefixed versions of utility classes.

    // If the direction is "null", add margin to all directions.
    @if $direction == null {
      .m-all#{$size},
      .rvt-m-all#{$size} {
        margin: $value !important;
      }

      .p-all#{$size},
      .rvt-p-all#{$size} {
        padding: $value !important;
      }

      .rvt-m-tb#{$size} {
        margin-bottom: $value !important;
        margin-top: $value !important;
      }

      .rvt-m-lr#{$size} {
        margin-left: $value !important;
        margin-right: $value !important;
      }

      .rvt-p-tb#{$size} {
        padding-bottom: $value !important;
        padding-top: $value !important;
      }

      .rvt-p-lr#{$size} {
        padding-left: $value !important;
        padding-right: $value !important;
      }

      // Otherwise create individual direction utilities.
    } @else {
      .m#{$direction}#{$size},
      .rvt-m#{$direction}#{$size} {
        margin#{$direction}: $value !important;
      }

      .p#{$direction}#{$size},
      .rvt-p#{$direction}#{$size} {
        padding#{$direction}: $value !important;
      }
    }
  } // End $spacing-sizes loop
} // End $spacing-directions loop

// Builds responsive spacing classes

@each $bp-name, $bp-value in $breakpoints {
  @include mq($bp-value) {
    @each $direction in $spacing-directions {
      @each $size, $value in $spacing-sizes {
        // NOTE: We use !important here because we want these utilities to always
        // produced the same result.
        
        // DEPRECATED: In the next major version of Rivet we will be removing
        // any non-prefixed versions of utility classes.
    
        // If the direction is "null", add margin to all directions.
        @if $direction == null {
          .m-all#{$size}-#{$bp-name}-up,
          .rvt-m-all#{$size}-#{$bp-name}-up {
            margin: $value !important;
          }

          .p-all#{$size}-#{$bp-name}-up,
          .rvt-p-all#{$size}-#{$bp-name}-up {
            padding: $value !important;
          }

          .rvt-m-tb#{$size}-#{$bp-name}-up {
            margin-bottom: $value !important;
            margin-top: $value !important;
          }

          .rvt-m-lr#{$size}-#{$bp-name}-up {
            margin-left: $value !important;
            margin-right: $value !important;
          }

          .rvt-p-tb#{$size}-#{$bp-name}-up {
            padding-bottom: $value !important;
            padding-top: $value !important;
          }

          .rvt-p-lr#{$size}-#{$bp-name}-up {
            padding-left: $value !important;
            padding-right: $value !important;
          }

          // Otherwise create individual direction utilities.
        } @else {
          .m#{$direction}#{$size}-#{$bp-name}-up,
          .rvt-m#{$direction}#{$size}-#{$bp-name}-up {
            margin#{$direction}: $value !important;
          }

          .p#{$direction}#{$size}-#{$bp-name}-up,
          .rvt-p#{$direction}#{$size}-#{$bp-name}-up {
            padding#{$direction}: $value !important;
          }
        }
      } // End $spacing-sizes loop
    } // End $spacing-directions loop
  }
}

// This loop creates classes that remove margin and padding from
// an element.

// NOTE: Adding the "-none" alias here without un-prefixed version
// because the "-none" alias is totally new. We will always prefix every
// class with "rvt-" moving forward.
@each $direction in $spacing-directions {
  @if $direction == null {
    .m-all-remove,
    .rvt-m-all-remove,
    .rvt-m-all-none {
      margin: 0 !important;
    }

    .p-all-remove,
    .rvt-p-all-remove, 
    .rvt-p-all-none {
      padding: 0 !important;
    }
  } @else {
    .m#{$direction}-remove,
    .rvt-m#{$direction}-remove, 
    .rvt-m#{$direction}-none {
      margin#{$direction}: 0 !important;
    }

    .p#{$direction}-remove,
    .rvt-p#{$direction}-remove,
    .rvt-p#{$direction}-none {
      padding#{$direction}: 0 !important;
    }
  }
} // End remove loop

// NOTE: Adding the "-none" alias to the responsive classes without
// un-prefixed version because the "-none" alias is totally new. We will
// always prefix every class with "rvt-" moving forward.
@each $bp-name, $bp-value in $breakpoints {
  @include mq($bp-value) {
    @each $direction in $spacing-directions {
      @if $direction == null {
        .rvt-m-all-none-#{$bp-name}-up {
          margin: 0 !important;
        }
        
        .rvt-p-all-none-#{$bp-name}-up {
          padding: 0 !important;
        }
        
        .rvt-m-tb-none-#{$bp-name}-up {
          margin-top: 0 !important;
          margin-bottom: 0 !important;
        }
        
        .rvt-p-tb-none-#{$bp-name}-up {
          padding-top: 0 !important;
          padding-bottom: 0 !important;
        }
        
        .rvt-m-lr-none-#{$bp-name}-up {
          margin-right: 0 !important;
          margin-left: 0 !important;
        }
        
        .rvt-p-lr-none-#{$bp-name}-up {
          padding-right: 0 !important;
          padding-left: 0 !important;
        }
      } @else {
        .rvt-m#{$direction}-none-#{$bp-name}-up {
          margin#{$direction}: 0 !important;
        }
        
        .rvt-p#{$direction}-none-#{$bp-name}-up {
          padding#{$direction}: 0 !important;
        }
      }
    }
  }
}
/* stylelint-enable */
